{"version":3,"sources":["components/social/elon.jpg","images/search.png","components/social/Search.js","components/social/Dropdown.js","components/social/Button.js","components/social/SocialChartCell.js","components/social/LeaderCell.js","pages/Social.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Search","onChange","className","placeholder","Dropdown","name","id","value","Button","title","onClick","SocialChartCell","dayP","weekP","monthP","followers","stock","datapoints","style","color","width","height","chartType","loader","data","rootProps","LeaderCell","img_src","pc","src","image","Social","evt","console","log","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3850fbe6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/elon.d6a8d96f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/search.d4c1f726.png\";","import React, {useState, useEffect} from 'react';\nimport '../../css/social/Search.css'\nimport image from '../../images/search.png'\n\nfunction Search({onChange}) {\n    //const [email, setEmail] = useState('')\n    return (\n        <div>\n            <input className={'search'} placeholder={'Search'} onChange={onChange}></input>\n            {/* <img src={image} className={'search-icon'} /> */}\n        </div>\n    )\n}\n\nexport default Search","import React, {useState, useEffect} from 'react';\nimport '../../css/social/Dropdown.css'\n\nfunction Dropdown() {\n\n    //const [email, setEmail] = useState('')\n\n    return (\n        <div>\n            <select className={'dropdown'} name=\"cars\" id=\"cars\">\n                <option value=\"volvo\">All</option>\n                <option value=\"saab\">Saab</option>\n                <option value=\"opel\">Opel</option>\n                <option value=\"audi\">Audi</option>\n            </select>\n        </div>\n    )\n}\n\nexport default Dropdown\n\n","import React from 'react';\nimport '../../css/social/Button.css'\n\nfunction Button({title, id, onClick}) {\n\n    //const [email, setEmail] = useState('')\n\n    return (\n        <div>\n            <button className={'button'} onClick={onClick} id={id}>{title}</button>\n        </div>\n    )\n}\n\nexport default Button","import React, {useState, useEffect} from 'react';\nimport '../../css/social/SocialChartCell.css'\nimport { Chart } from \"react-google-charts\";\n\nfunction SocialChartCell({dayP, weekP, monthP, followers, name, stock, datapoints, onClick}) {\n    //const [email, setEmail] = useState('')\n\n    return (\n        <div className={'social-cell'} onClick={onClick}>\n            <h5>{stock}</h5>\n            <h4>{name}</h4>\n            <h5>{followers} Followers</h5>\n            <h6>Performance</h6>\n            <div className={'performance'}>\n                <h5 className={'performance-item'}>1D:</h5>\n                <h5 style={dayP>0 ? {color: '#57D900'} : {color: 'red'}}>{dayP}%</h5>\n                <h5 className={'performance-item'}>1W:</h5>\n                <h5 style={weekP>0 ? {color: '#57D900'} : {color: 'red'}}>{weekP}%</h5>\n                <h5 className={'performance-item'}>1M:</h5>\n                <h5 style={monthP>0 ? {color: '#57D900'} : {color: 'red'}}>{monthP}%</h5>\n            </div>\n            <div>\n                <Chart\n                    width={'100%'}\n                    height={'100px'}\n                    chartType=\"LineChart\"\n                    loader={<div>Loading Chart</div>}\n                    data={datapoints}\n                    rootProps={{ 'data-testid': '1' }}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default SocialChartCell","import React, {useState, useEffect} from 'react';\nimport '../../css/social/LeaderCell.css'\nimport image from './elon.jpg'\n\nfunction LeaderCell({name, img_src, followers, pc, onClick}) {\n\n    //const [email, setEmail] = useState('')\n\n    return (\n        <div className={'cell'} onClick={onClick}>\n            <img src={image} className={'image'}></img>\n            <div className={'name'}>{name}</div>\n            <div className={'followers'}>{followers} Followers</div>\n            <div className={'percentage'} style={pc>0 ? {color: '#57D900'} : {color: 'red'}}>{pc}%</div>\n        </div>\n    )\n}\n\nexport default LeaderCell","import React, {useState, useEffect} from 'react';\nimport '../css/social/Social.css'\n\n// Importing Components\nimport Search from '../components/social/Search'\nimport Dropdown from '../components/social/Dropdown'\nimport Button from '../components/social/Button'\nimport SocialChartCell from '../components/social/SocialChartCell'\nimport LeaderCell from '../components/social/LeaderCell'\n\nfunction Social() {\n\n    //const [email, setEmail] = useState('')\n\n    const clickButton=(evt)=> {\n        console.log(\"button clicked\")\n    }\n\n    // sample data\n    const datapoints = [\n        ['x', '$'],\n        [0, 0],\n        [1, 10],\n        [2, 23],\n        [3, 17],\n        [4, 18],\n        [5, 9],\n        [6, 11],\n        [7, 27],\n        [8, 33],\n        [9, 200],\n        [10, 32],\n        [11, 35],\n    ]\n\n    return (\n        <div>\n            <div>\n                <h3 className={'leaders-title-lbl sansserif'}>Our Featured Leaders</h3>\n                <div className={'leaders-view'}>\n                    <LeaderCell name={\"Elon Musk\"} followers={10} pc={'2.31'}/>\n                    <LeaderCell name={\"Elon Tusk\"} followers={15} pc={'99.31'}/>\n                    <LeaderCell name={\"XEA-something\"} followers={20} pc={'-7.73'}/>\n                    <LeaderCell name={\"Elon\"} followers={25} pc={'2.31'}/>\n                    <LeaderCell name={\"Elon\"} followers={25} pc={'2.31'}/>\n                    <LeaderCell name={\"Elon\"} followers={25} pc={'2.31'}/>\n                    <LeaderCell name={\"Elon\"} followers={25} pc={'2.31'}/>\n                    <LeaderCell name={\"Elon\"} followers={25} pc={'2.31'}/>\n                </div>\n            </div>\n            <div className={'attributes-container'}>\n                <div className={'attributes-view-1'}>\n                    <Search/>\n                    <Dropdown/>\n                </div>\n                <div className={'attributes-view-2'}>\n                    <Dropdown/>\n                    <Button title={'Become A Leader'} onClick={clickButton} id={'click-me'}/>\n                </div>\n            </div>\n            <div className={'Social-Chart-Container'}>\n                <SocialChartCell name={'Elon Musk'} dayP={'69.42'} weekP={'-1.65'} monthP={'87.97'} followers={'21'} stock={'AAPL'} datapoints={datapoints} />\n                <SocialChartCell name={'Elon Musk'} dayP={'69.42'} weekP={'-1.65'} monthP={'87.97'} followers={'21'} stock={'AAPL'} datapoints={datapoints} />\n                <SocialChartCell name={'Elon Musk'} dayP={'69.42'} weekP={'-1.65'} monthP={'87.97'} followers={'21'} stock={'AAPL'} datapoints={datapoints} />\n                <SocialChartCell name={'Elon Musk'} dayP={'69.42'} weekP={'-1.65'} monthP={'87.97'} followers={'21'} stock={'AAPL'} datapoints={datapoints} />\n                <SocialChartCell name={'Elon Musk'} dayP={'69.42'} weekP={'-1.65'} monthP={'87.97'} followers={'21'} stock={'AAPL'} datapoints={datapoints} />\n                <SocialChartCell name={'Elon Musk'} dayP={'69.42'} weekP={'-1.65'} monthP={'87.97'} followers={'21'} stock={'AAPL'} datapoints={datapoints} />\n                <SocialChartCell name={'Elon Musk'} dayP={'69.42'} weekP={'-1.65'} monthP={'87.97'} followers={'21'} stock={'AAPL'} datapoints={datapoints} />\n            </div>\n        </div>\n    )\n}\n\nexport default Social","import React from 'react';\nimport './App.css';\nimport Social from './pages/Social'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Social />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}